name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS App
      run: |
        python -m PyInstaller build.spec
    
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NaverBlogAutomation-macOS
        path: dist/NaverBlogAutomation.app
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows EXE
      run: |
        python -m PyInstaller build-windows.spec
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NaverBlogAutomation-Windows
        path: dist/
        retention-days: 30

  create-release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download macOS Artifact
      uses: actions/download-artifact@v4
      with:
        name: NaverBlogAutomation-macOS
        path: ./macos
    
    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: NaverBlogAutomation-Windows
        path: ./windows
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## 🚀 자동 빌드 완료
          
          ### 변경사항
          - 브라우저 초기화 로직 개선
          - 다중 계정 처리 시 브라우저 재사용
          - 정리 버튼으로만 브라우저 초기화 가능
          - 불필요한 코드 정리 및 성능 최적화
          
          ### 다운로드
          - **macOS**: NaverBlogAutomation-macOS.app
          - **Windows**: NaverBlogAutomation.exe
          
          ### 사용법
          1. 다운로드한 앱을 실행
          2. 계정 추가 후 브라우저 열기
          3. 정리 버튼(🔧)으로 브라우저 초기화
        files: |
          ./macos/NaverBlogAutomation.app
          ./windows/NaverBlogAutomation.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
